AI Trading Bot - Business Requirements Document
Author: Bhushan
Date: September 19, 2025
Version: 1.0

1. Project Overview
    The goal is to develop a sophisticated, multi-agent AI trading bot capable of making informed trading decisions based on a combination of real-time news sentiment and traditional technical analysis. The system will operate autonomously but with user oversight and control. It will consist of three distinct, specialized AI agents working in a cohesive pipeline.

2. User Roles and Capabilities
    The primary user of the system is the bot owner. The user should have the following capabilities:

    Receive Alerts: Get immediate, high-impact alerts for significant news events.

    Manual Intervention: Confirm or reject trade signals generated by the News Agent.

    Enable/Disable Autonomous Mode: Turn the Autonomous Agent on or off for self-managed trading.

    Set Parameters: Configure the autonomous budget and other key parameters.

    Monitor Performance: View a live dashboard of trades, portfolio value, and performance metrics.

3. Agent-Based Architecture
    The system will be composed of three primary agents:

3.1. News Agent (The Supervisor)
    Purpose: To monitor real-time news and generate event-driven trading signals. This agent is the first line of defense for sudden market changes.

Key Requirements:

    Data Ingestion: Continuously poll news sources for the specified ticker.

    Custom Transformer Model: Utilize a custom-built transformer model, trained specifically on financial text, for highly accurate sentiment analysis.

    XAI Integration: Provide an explanation for each high-impact signal, highlighting the key phrases that influenced the sentiment score.

    User Alert System: Trigger a notification to the user for any news event with a sentiment score exceeding a predefined threshold.

    Signal Output: Produce a standardized signal (e.g., NEWS_BULLISH, NEWS_BEARISH) with an associated score and explanation.

3.2. Quantitative Agent (The Mathematician)
    Purpose: To perform mathematical and technical analysis of market data to identify trends and patterns.

Key Requirements:

    Data Source: Use Yahoo Finance or a similar API to get real-time price and volume data.

    Indicators: Calculate key indicators, starting with Simple Moving Averages (SMA).

    Signal Generation: Generate trading signals (BUY, SELL, HOLD) based on indicator crossovers or other technical rules.

    Output: Provide a standardized signal (e.g., QUANT_BUY, QUANT_SELL) based on its analysis.

3.3. Autonomous Agent (The Self-Managed Bot)
    Purpose: To execute trades automatically within a user-defined budget, without requiring real-time user confirmation.

Key Requirements:

    Enabled/Disabled State: A boolean flag (AUTONOMOUS_ENABLED) in config.py will control its operation.

    Budget Management: A hard cap on spending (AUTONOMOUS_BUDGET) to prevent over-allocation of funds.

    Signal Combination: It will listen for signals from both the News Agent and the Quantitative Agent. Its trading logic will combine these signals (e.g., only execute a buy if both agents agree).

    Risk Management: Implement basic risk management, such as a trailing stop-loss or profit-taking at a specified threshold.

    Execution: Connect to a trading API to execute market orders.

4. Technical Requirements
    Language: Python 3.x

    Libraries: requests, pandas, yfinance, torch, transformers (for tokenizers), plotly, and dotenv.

    Architecture: Modular, object-oriented, with each agent as a separate class.

    Security: API keys and sensitive data must be stored securely in a .env file and not hardcoded.

    Logging: Detailed logs of all signals, trades, and system events.